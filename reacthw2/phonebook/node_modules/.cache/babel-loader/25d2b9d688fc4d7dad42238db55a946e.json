{"ast":null,"code":"var _jsxFileName = \"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/src/components/Statistics.js\";\nimport React from 'react';\nimport styles from './Statistics.module.css';\n/* как через дефис получать класс в ксс модулях?? */\n//кнопки статистики.\n//options - это коллбек методов класса секции\n\nconst FeedbackOptions = ({\n  options\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['feedback-options'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: options.leaveGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: options.leaveNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: options.leaveBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"Bad\"));\n}; //\n//принимает данные статистики и выводит их \n\n\nclass Statistics extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Statistics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Good: \", good), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Neutral: \", neutral), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Bad: \", bad), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"Total: \", total), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Positive feedback domination: \", positiveDomination, \"%\"));\n  }\n\n} //\n//классовый компонент секции. он тут всем заправляет\n\n\nclass Section extends React.Component {\n  // state = {\n  //     good: 0,\n  //     neutral: 0,\n  //     bad: 0\n  // }\n  // //сумму и процент позитивных никуда не записываю, просто возвращаю из коллбек функций\n  // //коллбеки. ничего особенного.\n  // leaveGood = ()=>this.setState({good: this.state.good+1});\n  // leaveBad = () =>this.setState({bad: this.state.bad+1});\n  // leaveNeutral = ()=> this.setState({neutral: this.state.neutral+1});\n  // //\n  // //сумма\n  // countTotal = () => this.state.good+this.state.neutral+this.state.bad;\n  // //\n  // // подсчет процентов позитивных\n  // howManyPositive =()=> Math.round(100/this.countTotal()*(this.state.good));\n  // //\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, this.props.title), /*#__PURE__*/React.createElement(FeedbackOptions, {\n      options: {\n        leaveGood: this.leaveGood,\n        leaveNeutral: this.leaveNeutral,\n        leaveBad: this.leaveBad\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), this.countTotal() >= 1 ? /*#__PURE__*/React.createElement(Statistics, {\n      good: this.state.good,\n      neutral: this.state.neutral,\n      bad: this.state.bad,\n      total: this.countTotal(),\n      positiveDomination: this.howManyPositive(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.noFeedback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"No feedback given. U can be first\"));\n  }\n\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/pabadm/Рабочий стол/GOITreactHW/reacthw2/feedback/src/components/Statistics.js"],"names":["React","styles","FeedbackOptions","options","btn","leaveGood","leaveNeutral","leaveBad","Statistics","Component","render","stat","good","neutral","bad","total","positiveDomination","Section","title","props","countTotal","state","howManyPositive","noFeedback"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA;AAEA;AACA;;AACA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AACtC,sBACQ;AAAK,IAAA,SAAS,EAAEF,MAAM,CAAC,kBAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAEA,MAAM,CAACG,GAA1B;AAA+B,IAAA,OAAO,EAAED,OAAO,CAACE,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,IAAA,SAAS,EAAEJ,MAAM,CAACG,GAA1B;AAA+B,IAAA,OAAO,EAAED,OAAO,CAACG,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAQ,IAAA,SAAS,EAAEL,MAAM,CAACG,GAA1B;AAA+B,IAAA,OAAO,EAAED,OAAO,CAACI,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADR;AAQC,CATD,C,CAUA;AAGA;;;AACA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAwC;AACpCC,EAAAA,MAAM,GAAE;AACR,wBACA;AAAK,MAAA,SAAS,EAAET,MAAM,CAACO,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAM,MAAA,SAAS,EAAEP,MAAM,CAACU,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCC,IAArC,CADR,eAEQ;AAAM,MAAA,SAAS,EAAEX,MAAM,CAACU,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwCE,OAAxC,CAFR,eAGQ;AAAM,MAAA,SAAS,EAAEZ,MAAM,CAACU,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAoCG,GAApC,CAHR,eAIQ;AAAM,MAAA,SAAS,EAAEb,MAAM,CAACU,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsCI,KAAtC,CAJR,eAKQ;AAAM,MAAA,SAAS,EAAEd,MAAM,CAACU,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAC+BK,kBAD/B,MALR,CADA;AAWC;;AAbmC,C,CAexC;AAGA;;;AACA,MAAMC,OAAN,SAAsBjB,KAAK,CAACS,SAA5B,CAAqC;AACjC;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGAC,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAK,MAAA,SAAS,EAAET,MAAM,CAACgB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAEhB,MAAM,CAACiB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKC,KAAL,CAAWD,KAA3C,CADJ,eAII,oBAAC,eAAD;AACA,MAAA,OAAO,EAAE;AACTb,QAAAA,SAAS,EAAE,KAAKA,SADP;AAETC,QAAAA,YAAY,EAAE,KAAKA,YAFV;AAGTC,QAAAA,QAAQ,EAAC,KAAKA;AAHL,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAaK,KAAKa,UAAL,MAAmB,CAAnB,gBACC,oBAAC,UAAD;AACF,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWT,IADf;AAEF,MAAA,OAAO,EAAE,KAAKS,KAAL,CAAWR,OAFlB;AAGF,MAAA,GAAG,EAAE,KAAKQ,KAAL,CAAWP,GAHd;AAIF,MAAA,KAAK,EAAE,KAAKM,UAAL,EAJL;AAKF,MAAA,kBAAkB,EAAE,KAAKE,eAAL,EALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAOC;AAAM,MAAA,SAAS,EAAErB,MAAM,CAACsB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CApBN,CADA;AAyBH;;AApDgC;;AAwDrC,eAAeN,OAAf","sourcesContent":["import React from 'react';\nimport styles from './Statistics.module.css'\n/* как через дефис получать класс в ксс модулях?? */\n\n//кнопки статистики.\n//options - это коллбек методов класса секции\nconst FeedbackOptions = ({options}) =>{\nreturn(\n        <div className={styles['feedback-options']}>\n            <button className={styles.btn} onClick={options.leaveGood}>Good</button>\n            <button className={styles.btn} onClick={options.leaveNeutral}>Neutral</button>\n            <button className={styles.btn} onClick={options.leaveBad}>Bad</button>\n        </div>\n\n)\n}\n//\n\n\n//принимает данные статистики и выводит их \nclass Statistics extends React.Component{\n    render(){\n    return(\n    <div className={styles.Statistics}>\n            <span className={styles.stat}>Good: {good}</span>\n            <span className={styles.stat}>Neutral: {neutral}</span>\n            <span className={styles.stat}>Bad: {bad}</span>\n            <span className={styles.stat}>Total: {total}</span>\n            <span className={styles.stat}>\n            Positive feedback domination: {positiveDomination}%\n            </span>\n        </div>\n        )\n    }\n}\n//\n\n\n//классовый компонент секции. он тут всем заправляет\nclass Section extends React.Component{\n    // state = {\n    //     good: 0,\n    //     neutral: 0,\n    //     bad: 0\n    // }\n    // //сумму и процент позитивных никуда не записываю, просто возвращаю из коллбек функций\n\n\n    // //коллбеки. ничего особенного.\n    // leaveGood = ()=>this.setState({good: this.state.good+1});\n\n    // leaveBad = () =>this.setState({bad: this.state.bad+1});\n\n    // leaveNeutral = ()=> this.setState({neutral: this.state.neutral+1});\n    // //\n\n    // //сумма\n    // countTotal = () => this.state.good+this.state.neutral+this.state.bad;\n    // //\n\n    // // подсчет процентов позитивных\n    // howManyPositive =()=> Math.round(100/this.countTotal()*(this.state.good));\n    // //\n\n\n    render(){\n        return(\n        <div className={styles.Section}>\n            <span className={styles.title}>{this.props.title}</span>\n\n        {/* не понимаю к чему в задании был onLeaveFeedback помимо options */}\n            <FeedbackOptions \n            options={{\n            leaveGood: this.leaveGood,\n            leaveNeutral: this.leaveNeutral,\n            leaveBad:this.leaveBad\n            }}/>\n\n\n            {/* проверка на статистику */}\n            {this.countTotal()>=1 \n            ? <Statistics \n            good={this.state.good}\n            neutral={this.state.neutral} \n            bad={this.state.bad} \n            total={this.countTotal()} \n            positiveDomination={this.howManyPositive()}/>\n            : <span className={styles.noFeedback}>No feedback given. U can be first</span>\n            }\n        </div>\n        )\n    }\n}\n\n\nexport default Section;"]},"metadata":{},"sourceType":"module"}