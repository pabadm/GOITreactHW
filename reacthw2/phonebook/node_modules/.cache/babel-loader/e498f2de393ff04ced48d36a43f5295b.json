{"ast":null,"code":"var _jsxFileName = \"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/src/components/Statistics.js\";\nimport React from 'react';\n\nclass Statistics extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Statistics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"good\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }\n    }, \"Good \", good), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"neutral\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, \"Neutral \", neutral), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, \"Bad \", bad), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, \"Total \", total), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"positiveDomination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, \"Positive feedback        \", positiveDomination, \"%\"));\n  }\n\n}\n\nclass FeedbackOption extends React.Component {\n  render() {\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"FeedbackOption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"Plz leave feedback\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"feedback-btns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: options.leaveGood,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: options.leaveNeutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: options.leaveBad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Bad\")));\n  }\n\n}\n\nclass Section extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n    this.total = 0;\n    this.positiveDomination = 0;\n\n    this.leaveGood = () => {\n      this.setState(state => ({\n        good: state.good + 1\n      }));\n      this.total++;\n      this.howManyPositive(true);\n    };\n\n    this.leaveBad = () => {\n      this.setState(state => ({\n        bad: state.bad + 1\n      }));\n      this.total++;\n      this.howManyPositive();\n    };\n\n    this.leaveNeutral = () => {\n      this.setState(state => ({\n        neutral: state.neutral + 1\n      }));\n      this.total++;\n      this.howManyPositive();\n    };\n\n    this.howManyPositive = isGood => {\n      if (isGood === true) {\n        this.positiveDomination = Math.round(100 / this.total * (this.state.good + 1)); //из-за асинхронности пришлось добавлять +1.\n        // если вызвать консол лог, то state.good будет на 1 меньше\n      } else {\n        console.log('isGood :>> ', isGood);\n        this.positiveDomination = Math.round(100 / this.total * this.state.good);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/pabadm/Рабочий стол/GOITreactHW/reacthw2/feedback/src/components/Statistics.js"],"names":["React","Statistics","Component","render","good","neutral","bad","total","positiveDomination","FeedbackOption","options","leaveGood","leaveNeutral","leaveBad","Section","state","setState","howManyPositive","isGood","Math","round","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Statistics extends React.Component{\n    render(){\n    return(\n    <div className='Statistics'>\n        <span className=\"good\">Good {good}</span>\n            <span className=\"neutral\">Neutral {neutral}</span>\n            <span className=\"bad\">Bad {bad}</span>\n            <span className=\"total\">Total {total}</span>\n            <span className='positiveDomination'>Positive feedback        {positiveDomination}%</span>\n        </div>\n        )\n    }\n}\nclass FeedbackOption extends React.Component{\n    render(){\n        <div className='FeedbackOption'>\n            <span className='title'>Plz leave feedback</span>\n            <div className='feedback-btns'>\n            <button className='btn' onClick={options.leaveGood}>Good</button>\n            <button className='btn' onClick={options.leaveNeutral}>Neutral</button>\n            <button className='btn' onClick={options.leaveBad}>Bad</button>\n            </div>\n</div>\n    }\n}\n\nclass Section extends React.Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    total = 0;\n    positiveDomination= 0;\n    \n    leaveGood = ()=>{\n        this.setState(state => ({good: state.good+1}));\n        this.total++;\n        this.howManyPositive(true);\n    }\n    leaveBad = () =>{\n        this.setState(state=>({bad: state.bad+1}));\n        this.total++;    \n        this.howManyPositive();\n    }\n    leaveNeutral = ()=>{\n        this.setState(state=>({neutral: state.neutral+1}));\n        this.total++;\n        this.howManyPositive();\n    }\n    //Работает через сраку, но я старался. честно.\n    howManyPositive =(isGood)=>{\n        if(isGood===true){\n            this.positiveDomination = Math.round(100/this.total*(this.state.good+1));\n            //из-за асинхронности пришлось добавлять +1.\n            // если вызвать консол лог, то state.good будет на 1 меньше\n        }else{\n            console.log('isGood :>> ', isGood);\n            this.positiveDomination = Math.round(100/this.total*(this.state.good));\n        }\n    }\n\n    render(){\n        return(\n        <div className='Section'>\n\n        </div>\n\n        )\n    }\n}\n\n\nexport default Section;"]},"metadata":{},"sourceType":"module"}