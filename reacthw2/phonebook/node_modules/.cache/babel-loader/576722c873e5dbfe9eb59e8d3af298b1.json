{"ast":null,"code":"var _jsxFileName = \"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/src/components/Statistics.js\";\nimport React from 'react';\n\nclass Statistics extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n    this.counts = {\n      total: 0\n    };\n    this.positiveDomination = 0;\n\n    this.leaveGood = () => {\n      this.setState(state => ({\n        good: state.good + 1\n      }));\n      this.setState(counts => ({\n        total: counts.total + 1\n      }));\n      this.howManyPositive(true);\n    };\n\n    this.leaveBad = () => {\n      this.setState(state => ({\n        bad: state.bad + 1\n      }));\n      this.setState(counts => ({\n        total: counts.total + 1\n      }));\n      this.howManyPositive();\n    };\n\n    this.leaveNeutral = () => {\n      this.setState(state => ({\n        neutral: state.neutral + 1\n      }));\n      this.setState(counts => ({\n        total: counts.total + 1\n      }));\n      this.howManyPositive();\n    };\n\n    this.howManyPositive = isGood => {\n      console.log('this.counts.total :>> ', this.counts.total);\n\n      if (isGood === true) {\n        this.positiveDomination = Math.round(100 / this.total * (this.state.good + 1));\n      } else {\n        console.log('isGood :>> ', isGood);\n        this.positiveDomination = Math.round(100 / this.total * this.state.good);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Statistics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Statistics-leaver\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Plz leave feedback\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"feedback-btns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.leaveGood,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.leaveNeutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.leaveBad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Bad\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Statistics-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"good\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Good \", this.state.good), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"neutral\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Neutral \", this.state.neutral), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Bad \", this.state.bad), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Total \", this.total), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"positiveDomination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Positive feedback \", this.positiveDomination, \"%\")));\n  }\n\n}\n\nexport default Statistics;","map":{"version":3,"sources":["/home/pabadm/Рабочий стол/GOITreactHW/reacthw2/feedback/src/components/Statistics.js"],"names":["React","Statistics","Component","state","good","neutral","bad","counts","total","positiveDomination","leaveGood","setState","howManyPositive","leaveBad","leaveNeutral","isGood","console","log","Math","round","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Statistics extends React.Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    counts = {\n        total: 0,\n    }\n    positiveDomination= 0;\n    \n    leaveGood = ()=>{\n        this.setState(state => ({good: state.good+1}));\n        this.setState(counts=>({total: counts.total+1}));  \n        this.howManyPositive(true);\n    }\n    leaveBad = () =>{\n        this.setState(state=>({bad: state.bad+1}));\n        this.setState(counts=>({total: counts.total+1}));    \n        this.howManyPositive();\n    }\n    leaveNeutral = ()=>{\n        this.setState(state=>({neutral: state.neutral+1}))\n        this.setState(counts=>({total: counts.total+1}));   \n        this.howManyPositive();\n    }\n    //Работает через сраку, но я старался. честно.\n    howManyPositive =(isGood)=>{\n        console.log('this.counts.total :>> ', this.counts.total);\n        if(isGood===true){\n            this.positiveDomination = Math.round(100/this.total*(this.state.good+1))\n        }else{\n            console.log('isGood :>> ', isGood);\n            this.positiveDomination = Math.round(100/this.total*(this.state.good))\n        }\n    }\n\n\n    render(){\n        return(\n        <div className='Statistics'>\n            <div className='Statistics-leaver'>\n                <span className='title'>Plz leave feedback</span>\n                <div className='feedback-btns'>\n                    <button className='btn' onClick={this.leaveGood}>Good</button>\n                    <button className='btn' onClick={this.leaveNeutral}>Neutral</button>\n                    <button className='btn' onClick={this.leaveBad}>Bad</button>\n                </div>\n            </div>\n            <div className='Statistics-left'>\n                <span className=\"good\">Good {this.state.good}</span>\n                <span className=\"neutral\">Neutral {this.state.neutral}</span>\n                <span className=\"bad\">Bad {this.state.bad}</span>\n                <span className=\"total\">Total {this.total}</span>\n                <span className='positiveDomination'>Positive feedback {this.positiveDomination}%</span>\n            </div>\n        </div>\n\n        )\n    }\n}\n\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}