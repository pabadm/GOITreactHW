{"ast":null,"code":"var _jsxFileName = \"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/src/components/Statistics.js\";\nimport React from 'react';\nimport styles from './Statistics.module.css'; //кнопки статистики.\n//options - это коллбек методов класса секции\n\nconst FeedbackOptions = ({\n  options\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FeedbackOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feedback-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Bad\")));\n}; //\n//классовый компонент секции. он тут всем заправляет\n\n\nclass Section extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.leaveGood = () => this.setState(state => ({\n      good: state.good + 1\n    }));\n\n    this.leaveBad = () => this.setState(state => ({\n      bad: state.bad + 1\n    }));\n\n    this.leaveNeutral = () => this.setState(state => ({\n      neutral: state.neutral + 1\n    }));\n\n    this.countTotal = () => this.state.good + this.state.neutral + this.state.bad;\n\n    this.howManyPositive = () => Math.round(100 / this.countTotal() * this.state.good);\n  }\n\n  //\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, this.props.title), /*#__PURE__*/React.createElement(FeedbackOptions, {\n      options: {\n        leaveGood: this.leaveGood,\n        leaveNeutral: this.leaveNeutral,\n        leaveBad: this.leaveBad\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), this.countTotal() >= 1 ? /*#__PURE__*/React.createElement(Statistics, {\n      good: this.state.good,\n      neutral: this.state.neutral,\n      bad: this.state.bad,\n      total: this.countTotal(),\n      positiveDomination: this.howManyPositive(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"noFeedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"no feedback given. u can be first\"));\n  }\n\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/pabadm/Рабочий стол/GOITreactHW/reacthw2/feedback/src/components/Statistics.js"],"names":["React","styles","FeedbackOptions","options","leaveGood","leaveNeutral","leaveBad","Section","Component","state","good","neutral","bad","setState","countTotal","howManyPositive","Math","round","render","props","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './Statistics.module.css'\n\n\n//кнопки статистики.\n//options - это коллбек методов класса секции\nconst FeedbackOptions = ({options}) =>{\nreturn(\n    <div className='FeedbackOption'>\n        <div className='feedback-btns'>\n            <button className='btn' onClick={options.leaveGood}>Good</button>\n            <button className='btn' onClick={options.leaveNeutral}>Neutral</button>\n            <button className='btn' onClick={options.leaveBad}>Bad</button>\n        </div>\n    </div>\n)\n}\n//\n\n//классовый компонент секции. он тут всем заправляет\nclass Section extends React.Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    //сумму и процент позитивных никуда не записываю, просто возвращаю из коллбек функций\n\n\n    //коллбеки. ничего особенного.\n    leaveGood = ()=>this.setState(state=>({good:state.good+1}));\n\n    leaveBad = () =>this.setState(state=>({bad: state.bad+1}));\n\n    leaveNeutral = ()=> this.setState(state=>({neutral: state.neutral+1}));\n    //\n\n    //сумма. юзается уже в рендере и в подсчете позитивщиков\n    countTotal = () => this.state.good+this.state.neutral+this.state.bad;\n    //\n\n    // подсчет людей, которые нажали не ту кнопку\n    howManyPositive =()=> Math.round(100/this.countTotal()*(this.state.good));\n    //\n\n\n    render(){\n        return(\n        <div className={styles.Section}>\n            <span className='title'>{this.props.title}</span>\n\n        {/* не понимаю к чему в задании был onLeaveFeedback помимо options */}\n            <FeedbackOptions \n            options={{\n            leaveGood: this.leaveGood,\n            leaveNeutral: this.leaveNeutral,\n            leaveBad:this.leaveBad\n            }}/>\n\n\n            {/* проверка на статистику */}\n            {this.countTotal()>=1 \n            ? <Statistics \n            good={this.state.good}\n            neutral={this.state.neutral} \n            bad={this.state.bad} \n            total={this.countTotal()} \n            positiveDomination={this.howManyPositive()}/>\n            : <span className='noFeedback'>no feedback given. u can be first</span>\n            }\n        </div>\n        )\n    }\n}\n\n\nexport default Section;"]},"metadata":{},"sourceType":"module"}