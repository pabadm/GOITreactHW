{"ast":null,"code":"var _jsxFileName = \"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/src/components/Statistics.js\";\nimport React from 'react'; //принимает данные статистики и выводит их \n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positiveDomination\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Statistics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"Good \", good), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Neutral \", neutral), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Bad \", bad), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Total \", total), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"positiveDomination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"Positive feedback        \", positiveDomination, \"%\"));\n}; //\n//кнопки статистики.\n//options - это коллбек методов класса секции\n\n\nconst FeedbackOptions = ({\n  options\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FeedbackOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feedback-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Bad\")));\n}; //\n//классовый компонент секции. он тут всем заправляет\n\n\nclass Section extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.leaveGood = () => this.setState(state => ({\n      good: state.good + 1\n    }));\n\n    this.leaveBad = () => this.setState(state => ({\n      bad: state.bad + 1\n    }));\n\n    this.leaveNeutral = () => this.setState(state => ({\n      neutral: state.neutral + 1\n    }));\n\n    this.countTotal = () => this.state.good + this.state.neutral + this.state.bad;\n\n    this.howManyPositive = () => Math.round(100 / this.countTotal() * this.state.good);\n  }\n\n  //\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, this.props.title), /*#__PURE__*/React.createElement(FeedbackOptions, {\n      options: {\n        leaveGood: this.leaveGood,\n        leaveNeutral: this.leaveNeutral,\n        leaveBad: this.leaveBad\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), countTotal());\n  }\n\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/pabadm/Рабочий стол/GOITreactHW/reacthw2/feedback/src/components/Statistics.js"],"names":["React","Statistics","good","neutral","bad","total","positiveDomination","FeedbackOptions","options","leaveGood","leaveNeutral","leaveBad","Section","Component","state","setState","countTotal","howManyPositive","Math","round","render","props","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,OAAN;AAAcC,EAAAA,GAAd;AAAkBC,EAAAA,KAAlB;AAAwBC,EAAAA;AAAxB,CAAD,KAAgD;AAC/D,sBACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA6BJ,IAA7B,CADJ,eAEQ;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmCC,OAAnC,CAFR,eAGQ;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA2BC,GAA3B,CAHR,eAIQ;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA+BC,KAA/B,CAJR,eAKQ;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA+DC,kBAA/D,MALR,CADA;AASH,CAVD,C,CAWA;AAEA;AACA;;;AACA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AACtC,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAEA,OAAO,CAACC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAED,OAAO,CAACE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAEF,OAAO,CAACG,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADJ,CADJ;AASC,CAVD,C,CAWA;AAEA;;;AACA,MAAMC,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJZ,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,OAAO,EAAE,CAFL;AAGJC,MAAAA,GAAG,EAAE;AAHD,KADyB;;AAAA,SAUjCK,SAViC,GAUrB,MAAI,KAAKM,QAAL,CAAcD,KAAK,KAAG;AAACZ,MAAAA,IAAI,EAACY,KAAK,CAACZ,IAAN,GAAW;AAAjB,KAAH,CAAnB,CAViB;;AAAA,SAYjCS,QAZiC,GAYtB,MAAK,KAAKI,QAAL,CAAcD,KAAK,KAAG;AAACV,MAAAA,GAAG,EAAEU,KAAK,CAACV,GAAN,GAAU;AAAhB,KAAH,CAAnB,CAZiB;;AAAA,SAcjCM,YAdiC,GAclB,MAAK,KAAKK,QAAL,CAAcD,KAAK,KAAG;AAACX,MAAAA,OAAO,EAAEW,KAAK,CAACX,OAAN,GAAc;AAAxB,KAAH,CAAnB,CAda;;AAAA,SAkBjCa,UAlBiC,GAkBpB,MAAM,KAAKF,KAAL,CAAWZ,IAAX,GAAgB,KAAKY,KAAL,CAAWX,OAA3B,GAAmC,KAAKW,KAAL,CAAWV,GAlBhC;;AAAA,SAsBjCa,eAtBiC,GAsBhB,MAAKC,IAAI,CAACC,KAAL,CAAW,MAAI,KAAKH,UAAL,EAAJ,GAAuB,KAAKF,KAAL,CAAWZ,IAA7C,CAtBW;AAAA;;AAuBjC;AAGAkB,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKC,KAAL,CAAWC,KAApC,CADJ,eAII,oBAAC,eAAD;AACA,MAAA,OAAO,EAAE;AACTb,QAAAA,SAAS,EAAE,KAAKA,SADP;AAETC,QAAAA,YAAY,EAAE,KAAKA,YAFV;AAGTC,QAAAA,QAAQ,EAAC,KAAKA;AAHL,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAUKK,UAAU,EAVf,CADA;AAmBH;;AA9CgC;;AAkDrC,eAAeJ,OAAf","sourcesContent":["import React from 'react';\n\n\n//принимает данные статистики и выводит их \nconst Statistics = ({good,neutral,bad,total,positiveDomination}) =>{\n    return(\n    <div className='Statistics'>\n        <span className=\"good\">Good {good}</span>\n            <span className=\"neutral\">Neutral {neutral}</span>\n            <span className=\"bad\">Bad {bad}</span>\n            <span className=\"total\">Total {total}</span>\n            <span className='positiveDomination'>Positive feedback        {positiveDomination}%</span>\n        </div>\n        )\n}\n//\n\n//кнопки статистики.\n//options - это коллбек методов класса секции\nconst FeedbackOptions = ({options}) =>{\nreturn(\n    <div className='FeedbackOption'>\n        <div className='feedback-btns'>\n            <button className='btn' onClick={options.leaveGood}>Good</button>\n            <button className='btn' onClick={options.leaveNeutral}>Neutral</button>\n            <button className='btn' onClick={options.leaveBad}>Bad</button>\n        </div>\n    </div>\n)\n}\n//\n\n//классовый компонент секции. он тут всем заправляет\nclass Section extends React.Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    //сумму и процент позитивных никуда не записываю, просто возвращаю из коллбек функций\n\n\n    //коллбеки. ничего особенного.\n    leaveGood = ()=>this.setState(state=>({good:state.good+1}));\n\n    leaveBad = () =>this.setState(state=>({bad: state.bad+1}));\n\n    leaveNeutral = ()=> this.setState(state=>({neutral: state.neutral+1}));\n    //\n\n    //сумма. юзается уже в рендере и в подсчете позитивщиков\n    countTotal = () => this.state.good+this.state.neutral+this.state.bad;\n    //\n\n    // подсчет людей, которые нажали не ту кнопку\n    howManyPositive =()=> Math.round(100/this.countTotal()*(this.state.good));\n    //\n\n\n    render(){\n        return(\n        <div className='Section'>\n            <span className='title'>{this.props.title}</span>\n\n        {/* не понимаю к чему в задании был onLeaveFeedback помимо options */}\n            <FeedbackOptions \n            options={{\n            leaveGood: this.leaveGood,\n            leaveNeutral: this.leaveNeutral,\n            leaveBad:this.leaveBad\n            }}/>\n            {countTotal()}\n            {/* <Statistics good={this.state.good}\n            neutral={this.state.neutral} \n            bad={this.state.bad} \n            total={this.countTotal()} \n            positiveDomination={this.howManyPositive()}/> */}\n        </div>\n        )\n    }\n}\n\n\nexport default Section;"]},"metadata":{},"sourceType":"module"}