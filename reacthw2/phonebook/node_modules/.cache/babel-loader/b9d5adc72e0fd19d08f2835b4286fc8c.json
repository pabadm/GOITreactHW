{"ast":null,"code":"var _jsxFileName = \"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/src/components/Statistics.js\";\nimport React from 'react';\n\nclass Statistics extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.defaultProps = {};\n  }\n\n  render() {\n    const props = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Statistics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"good\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, \"Good \", good), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"neutral\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, \"Neutral \", neutral), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, \"Bad \", bad), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, \"Total \", total), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"positiveDomination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, \"Positive feedback        \", positiveDomination, \"%\"));\n  }\n\n}\n\nconst FeedbackOption = ({\n  options,\n  onLeaveFeedback\n}) => {\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    className: \"FeedbackOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Plz leave feedback\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feedback-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Bad\")));\n};\n\nclass Section extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n    this.total = 0;\n    this.positiveDomination = 0;\n\n    this.leaveGood = () => {\n      this.setState(state => ({\n        good: state.good + 1\n      }));\n      this.total++;\n      this.howManyPositive(true);\n    };\n\n    this.leaveBad = () => {\n      this.setState(state => ({\n        bad: state.bad + 1\n      }));\n      this.total++;\n      this.howManyPositive();\n    };\n\n    this.leaveNeutral = () => {\n      this.setState(state => ({\n        neutral: state.neutral + 1\n      }));\n      this.total++;\n      this.howManyPositive();\n    };\n\n    this.howManyPositive = isGood => {\n      if (isGood === true) {\n        this.positiveDomination = Math.round(100 / this.total * (this.state.good + 1)); //из-за асинхронности пришлось добавлять +1.\n        // если вызвать консол лог, то state.good будет на 1 меньше\n      } else {\n        console.log('isGood :>> ', isGood);\n        this.positiveDomination = Math.round(100 / this.total * this.state.good);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/pabadm/Рабочий стол/GOITreactHW/reacthw2/feedback/src/components/Statistics.js"],"names":["React","Statistics","Component","defaultProps","render","props","good","neutral","bad","total","positiveDomination","FeedbackOption","options","onLeaveFeedback","leaveGood","leaveNeutral","leaveBad","Section","state","setState","howManyPositive","isGood","Math","round","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Statistics extends React.Component{\n    defaultProps ={\n        \n    }\n    render(){\n    const props = this.props;\n    return(\n        <div className='Statistics'>\n            <span className=\"good\">Good {good}</span>\n            <span className=\"neutral\">Neutral {neutral}</span>\n            <span className=\"bad\">Bad {bad}</span>\n            <span className=\"total\">Total {total}</span>\n            <span className='positiveDomination'>Positive feedback        {positiveDomination}%</span>\n        </div>\n        )\n    }\n}\nconst FeedbackOption = ({options,onLeaveFeedback}) =>{\n<div className='FeedbackOption'>\n    <span className='title'>Plz leave feedback</span>\n    <div className='feedback-btns'>\n        <button className='btn' onClick={options.leaveGood}>Good</button>\n        <button className='btn' onClick={options.leaveNeutral}>Neutral</button>\n        <button className='btn' onClick={options.leaveBad}>Bad</button>\n    </div>\n</div>\n}\n\nclass Section extends React.Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    total = 0;\n    positiveDomination= 0;\n    \n    leaveGood = ()=>{\n        this.setState(state => ({good: state.good+1}));\n        this.total++;\n        this.howManyPositive(true);\n    }\n    leaveBad = () =>{\n        this.setState(state=>({bad: state.bad+1}));\n        this.total++;    \n        this.howManyPositive();\n    }\n    leaveNeutral = ()=>{\n        this.setState(state=>({neutral: state.neutral+1}));\n        this.total++;\n        this.howManyPositive();\n    }\n    //Работает через сраку, но я старался. честно.\n    howManyPositive =(isGood)=>{\n        if(isGood===true){\n            this.positiveDomination = Math.round(100/this.total*(this.state.good+1));\n            //из-за асинхронности пришлось добавлять +1.\n            // если вызвать консол лог, то state.good будет на 1 меньше\n        }else{\n            console.log('isGood :>> ', isGood);\n            this.positiveDomination = Math.round(100/this.total*(this.state.good));\n        }\n    }\n\n    render(){\n        return(\n        <div className='Section'>\n\n        </div>\n\n        )\n    }\n}\n\n\nexport default Section;"]},"metadata":{},"sourceType":"module"}