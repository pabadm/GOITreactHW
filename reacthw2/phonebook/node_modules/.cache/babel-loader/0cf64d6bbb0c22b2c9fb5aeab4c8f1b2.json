{"ast":null,"code":"var _jsxFileName = \"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/src/components/Statistics.js\";\nimport React from 'react'; //\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positiveDomination\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Statistics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, \"Good \", good), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"Neutral \", neutral), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \"Bad \", bad), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Total \", total), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"positiveDomination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Positive feedback        \", positiveDomination, \"%\"));\n}; //\n\n\nconst FeedbackOptions = ({\n  options\n}) => {\n  console.log('options :>> ', options);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FeedbackOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Plz leave feedback\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feedback-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: options.leaveBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Bad\")));\n};\n\nclass Section extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n    this.counts = {\n      total: 0,\n      positiveDomination: 0\n    };\n\n    this.leaveGood = () => {\n      this.setState(counts => ({\n        total: counts.total + 1\n      }), this.howManyPositive); // this.setState(state => ({good: state.good+1}));\n      // this.howManyPositive(true);\n    };\n\n    this.leaveBad = () => {\n      this.setState(state => ({\n        bad: state.bad + 1\n      }), this.howManyPositive); // this.setState(counts=>({total:counts.total+1}));\n      // this.counts.total++;    \n      // this.howManyPositive();\n    };\n\n    this.leaveNeutral = () => {\n      this.setState(state => ({\n        neutral: state.neutral + 1\n      }), this.howManyPositive); // this.setState(counts=>({total:counts.total+1}));\n      // this.howManyPositive();\n    };\n\n    this.countTotal = () => {\n      let total;\n      return total = this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.howManyPositive = () => {\n      // console.log('this.good :>> ', this.state.good);\n      // console.log('this.total :>> ', this.total);\n      this.counts.positiveDomination = Math.round(100 / this.total * this.state.good);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FeedbackOptions, {\n      options: {\n        leaveGood: this.leaveGood,\n        leaveNeutral: this.leaveNeutral,\n        leaveBad: this.leaveBad\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Statistics, {\n      good: this.state.good,\n      neutral: this.state.neutral,\n      bad: this.state.bad,\n      total: this.counts.total,\n      positiveDomination: this.counts.positiveDomination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/pabadm/Рабочий стол/GOITreactHW/reacthw2/feedback/src/components/Statistics.js"],"names":["React","Statistics","good","neutral","bad","total","positiveDomination","FeedbackOptions","options","console","log","leaveGood","leaveNeutral","leaveBad","Section","Component","state","counts","setState","howManyPositive","countTotal","Math","round","render"],"mappings":"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","sourcesContent":["import React from 'react';\n//\nconst Statistics = ({good,neutral,bad,total,positiveDomination}) =>{\n    return(\n    <div className='Statistics'>\n        <span className=\"good\">Good {good}</span>\n            <span className=\"neutral\">Neutral {neutral}</span>\n            <span className=\"bad\">Bad {bad}</span>\n            <span className=\"total\">Total {total}</span>\n            <span className='positiveDomination'>Positive feedback        {positiveDomination}%</span>\n        </div>\n        )\n}\n//\nconst FeedbackOptions = ({options}) =>{\n    console.log('options :>> ', options);\nreturn(\n    <div className='FeedbackOption'>\n        <span className='title'>Plz leave feedback</span>\n        <div className='feedback-btns'>\n            <button className='btn' onClick={options.leaveGood}>Good</button>\n            <button className='btn' onClick={options.leaveNeutral}>Neutral</button>\n            <button className='btn' onClick={options.leaveBad}>Bad</button>\n        </div>\n    </div>\n)\n}\n\nclass Section extends React.Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    counts = {\n        total: 0,\n        positiveDomination: 0,\n    }\n    \n    leaveGood = ()=>{\n        this.setState(counts=>({total:counts.total+1}),this.howManyPositive);\n        // this.setState(state => ({good: state.good+1}));\n        // this.howManyPositive(true);\n    }\n    leaveBad = () =>{\n        this.setState(state=>({bad: state.bad+1}), this.howManyPositive);\n        // this.setState(counts=>({total:counts.total+1}));\n        // this.counts.total++;    \n        // this.howManyPositive();\n    }\n    leaveNeutral = ()=>{\n        this.setState(state=>({neutral: state.neutral+1}), this.howManyPositive);\n        // this.setState(counts=>({total:counts.total+1}));\n        // this.howManyPositive();\n    }\n    countTotal = () =>{\n        let total;\n        return total = this.state.good+this.state.neutral+this.state.bad;\n    }\n    howManyPositive =()=>{\n                \n            // console.log('this.good :>> ', this.state.good);\n            // console.log('this.total :>> ', this.total);\n            this.counts.positiveDomination = Math.round(100/this.total*(this.state.good));\n    }\n\n    render(){\n        return(\n        <div className='Section'>\n            <FeedbackOptions options={\n            {leaveGood: this.leaveGood,\n            leaveNeutral: this.leaveNeutral,\n            leaveBad:this.leaveBad\n            }\n            }/>\n\n            <Statistics good={this.state.good}\n            neutral={this.state.neutral} \n            bad={this.state.bad} \n            total={this.counts.total} \n            positiveDomination={this.counts.positiveDomination}/>\n        </div>\n\n        )\n    }\n}\n\n\nexport default Section;"]},"metadata":{},"sourceType":"module"}