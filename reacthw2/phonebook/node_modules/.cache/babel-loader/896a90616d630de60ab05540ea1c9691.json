{"ast":null,"code":"var _jsxFileName = \"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/src/components/Statistics.js\";\nimport React from 'react';\nimport styles from './Statistics.module.css';\n/* как через дефис получать класс в ксс модулях?? */\n//кнопки статистики.\n//options - это коллбек методов класса секции\n\nconst FeedbackOptions = ({\n  options\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['feedback-options'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: options.leaveGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: options.leaveNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: options.leaveBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"Bad\"));\n}; //\n//принимает данные статистики и выводит их \n\n\nclass Statistics extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.leaveGood = () => this.setState({\n      good: this.state.good + 1\n    });\n\n    this.leaveBad = () => this.setState({\n      bad: this.state.bad + 1\n    });\n\n    this.leaveNeutral = () => this.setState({\n      neutral: this.state.neutral + 1\n    });\n\n    this.countTotal = () => this.state.good + this.state.neutral + this.state.bad;\n\n    this.howManyPositive = () => Math.round(100 / this.countTotal() * this.state.good);\n  }\n\n  //\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FeedbackOptions, {\n      options: {\n        leaveGood: this.leaveGood,\n        leaveNeutral: this.leaveNeutral,\n        leaveBad: this.leaveBad\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Statistics,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Good: \", this.good), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Neutral: \", this.neutral), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Bad: \", this.bad), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Total: \", this.total), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.stat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Positive feedback domination: \", this.positiveDomination, \"%\")));\n  }\n\n} //\n//классовый компонент секции. он тут всем заправляет\n\n\nclass Section extends React.Component {\n  // state = {\n  //     good: 0,\n  //     neutral: 0,\n  //     bad: 0\n  // }\n  // //сумму и процент позитивных никуда не записываю, просто возвращаю из коллбек функций\n  // //коллбеки. ничего особенного.\n  // leaveGood = ()=>this.setState({good: this.state.good+1});\n  // leaveBad = () =>this.setState({bad: this.state.bad+1});\n  // leaveNeutral = ()=> this.setState({neutral: this.state.neutral+1});\n  // //\n  // //сумма\n  // countTotal = () => this.state.good+this.state.neutral+this.state.bad;\n  // //\n  // // подсчет процентов позитивных\n  // howManyPositive =()=> Math.round(100/this.countTotal()*(this.state.good));\n  // //\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, this.props.title), this.countTotal() >= 1 ? /*#__PURE__*/React.createElement(Statistics, {\n      good: this.state.good,\n      neutral: this.state.neutral,\n      bad: this.state.bad,\n      total: this.countTotal(),\n      positiveDomination: this.howManyPositive(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.noFeedback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"No feedback given. U can be first\"));\n  }\n\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/pabadm/Рабочий стол/GOITreactHW/reacthw2/feedback/src/components/Statistics.js"],"names":["React","styles","FeedbackOptions","options","btn","leaveGood","leaveNeutral","leaveBad","Statistics","Component","state","good","neutral","bad","setState","countTotal","howManyPositive","Math","round","render","stat","total","positiveDomination","Section","title","props","noFeedback"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './Statistics.module.css'\n/* как через дефис получать класс в ксс модулях?? */\n\n//кнопки статистики.\n//options - это коллбек методов класса секции\nconst FeedbackOptions = ({options}) =>{\nreturn(\n        <div className={styles['feedback-options']}>\n            <button className={styles.btn} onClick={options.leaveGood}>Good</button>\n            <button className={styles.btn} onClick={options.leaveNeutral}>Neutral</button>\n            <button className={styles.btn} onClick={options.leaveBad}>Bad</button>\n        </div>\n\n)\n}\n//\n\n\n//принимает данные статистики и выводит их \nclass Statistics extends React.Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    //сумму и процент позитивных никуда не записываю, просто возвращаю из коллбек функций\n\n\n    //коллбеки. ничего особенного.\n    leaveGood = ()=>this.setState({good: this.state.good+1});\n\n    leaveBad = () =>this.setState({bad: this.state.bad+1});\n\n    leaveNeutral = ()=> this.setState({neutral: this.state.neutral+1});\n    //\n\n    //сумма\n    countTotal = () => this.state.good+this.state.neutral+this.state.bad;\n    //\n\n    // подсчет процентов позитивных\n    howManyPositive =()=> Math.round(100/this.countTotal()*(this.state.good));\n    //\n\n\n\n\n    render(){\n    return(\n    <>\n    <FeedbackOptions options={{\n        leaveGood: this.leaveGood,\n        leaveNeutral: this.leaveNeutral,\n        leaveBad:this.leaveBad\n        }}/>\n    <div className={styles.Statistics}>\n            <span className={styles.stat}>Good: {this.good}</span>\n            <span className={styles.stat}>Neutral: {this.neutral}</span>\n            <span className={styles.stat}>Bad: {this.bad}</span>\n            <span className={styles.stat}>Total: {this.total}</span>\n            <span className={styles.stat}>\n            Positive feedback domination: {this.positiveDomination}%\n            </span>\n    </div>\n    </>\n        )\n    }\n}\n//\n\n\n//классовый компонент секции. он тут всем заправляет\nclass Section extends React.Component{\n    // state = {\n    //     good: 0,\n    //     neutral: 0,\n    //     bad: 0\n    // }\n    // //сумму и процент позитивных никуда не записываю, просто возвращаю из коллбек функций\n\n\n    // //коллбеки. ничего особенного.\n    // leaveGood = ()=>this.setState({good: this.state.good+1});\n\n    // leaveBad = () =>this.setState({bad: this.state.bad+1});\n\n    // leaveNeutral = ()=> this.setState({neutral: this.state.neutral+1});\n    // //\n\n    // //сумма\n    // countTotal = () => this.state.good+this.state.neutral+this.state.bad;\n    // //\n\n    // // подсчет процентов позитивных\n    // howManyPositive =()=> Math.round(100/this.countTotal()*(this.state.good));\n    // //\n\n\n    render(){\n        return(\n        <div className={styles.Section}>\n            <span className={styles.title}>{this.props.title}</span>\n\n            {/* проверка на статистику */}\n            {this.countTotal()>=1 \n            ? <Statistics \n            good={this.state.good}\n            neutral={this.state.neutral} \n            bad={this.state.bad} \n            total={this.countTotal()} \n            positiveDomination={this.howManyPositive()}/>\n            : <span className={styles.noFeedback}>No feedback given. U can be first</span>\n            }\n        </div>\n        )\n    }\n}\n\n\nexport default Section;"]},"metadata":{},"sourceType":"module"}