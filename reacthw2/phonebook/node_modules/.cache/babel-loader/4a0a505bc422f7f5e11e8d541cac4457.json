{"ast":null,"code":"import _classCallCheck from\"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/pabadm/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/GOITreactHW/reacthw2/feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import styles from'./Statistics.module.css';/* как через дефис получать класс в ксс модулях?? */console.log('styles :>> ',styles);//кнопки статистики.\n//options - это коллбек методов класса секции\nvar FeedbackOptions=function FeedbackOptions(_ref){var options=_ref.options;return/*#__PURE__*/React.createElement(\"div\",{className:styles.FeedbackOptions},/*#__PURE__*/React.createElement(\"button\",{className:styles.btn,onClick:options.leaveGood},\"Good\"),/*#__PURE__*/React.createElement(\"button\",{className:styles.btn,onClick:options.leaveNeutral},\"Neutral\"),/*#__PURE__*/React.createElement(\"button\",{className:styles.btn,onClick:options.leaveBad},\"Bad\"));};//\n//принимает данные статистики и выводит их \nvar Statistics=function Statistics(_ref2){var good=_ref2.good,neutral=_ref2.neutral,bad=_ref2.bad,total=_ref2.total,positiveDomination=_ref2.positiveDomination;return/*#__PURE__*/React.createElement(\"div\",{className:styles.Statistics},/*#__PURE__*/React.createElement(\"span\",{className:styles.stat},\"Good: \",good),/*#__PURE__*/React.createElement(\"span\",{className:styles.stat},\"Neutral: \",neutral),/*#__PURE__*/React.createElement(\"span\",{className:styles.stat},\"Bad: \",bad),/*#__PURE__*/React.createElement(\"span\",{className:styles.stat},\"Total: \",total),/*#__PURE__*/React.createElement(\"span\",{className:styles.stat},\"Positive feedback domination: \",positiveDomination,\"%\"));};//\n//классовый компонент секции. он тут всем заправляет\nvar Section=/*#__PURE__*/function(_React$Component){_inherits(Section,_React$Component);var _super=_createSuper(Section);function Section(){var _this;_classCallCheck(this,Section);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={good:0,neutral:0,bad:0};_this.leaveGood=function(){return _this.setState(function(state){return{good:state.good+1};});};_this.leaveBad=function(){return _this.setState(function(state){return{bad:state.bad+1};});};_this.leaveNeutral=function(){return _this.setState(function(state){return{neutral:state.neutral+1};});};_this.countTotal=function(){return _this.state.good+_this.state.neutral+_this.state.bad;};_this.howManyPositive=function(){return Math.round(100/_this.countTotal()*_this.state.good);};return _this;}_createClass(Section,[{key:\"render\",//\nvalue:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:styles.Section},/*#__PURE__*/React.createElement(\"span\",{className:styles.title},this.props.title),/*#__PURE__*/React.createElement(FeedbackOptions,{options:{leaveGood:this.leaveGood,leaveNeutral:this.leaveNeutral,leaveBad:this.leaveBad}}),this.countTotal()>=1?/*#__PURE__*/React.createElement(Statistics,{good:this.state.good,neutral:this.state.neutral,bad:this.state.bad,total:this.countTotal(),positiveDomination:this.howManyPositive()}):/*#__PURE__*/React.createElement(\"span\",{className:styles.noFeedback},\"No feedback given. U can be first\"));}}]);return Section;}(React.Component);export default Section;","map":{"version":3,"sources":["/home/pabadm/Рабочий стол/GOITreactHW/reacthw2/feedback/src/components/Statistics.js"],"names":["React","styles","console","log","FeedbackOptions","options","btn","leaveGood","leaveNeutral","leaveBad","Statistics","good","neutral","bad","total","positiveDomination","stat","Section","state","setState","countTotal","howManyPositive","Math","round","title","props","noFeedback","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './Statistics.module.css'\n/* как через дефис получать класс в ксс модулях?? */\nconsole.log('styles :>> ', styles);\n\n//кнопки статистики.\n//options - это коллбек методов класса секции\nconst FeedbackOptions = ({options}) =>{\nreturn(\n        <div className={styles.FeedbackOptions}>\n            <button className={styles.btn} onClick={options.leaveGood}>Good</button>\n            <button className={styles.btn} onClick={options.leaveNeutral}>Neutral</button>\n            <button className={styles.btn} onClick={options.leaveBad}>Bad</button>\n        </div>\n\n)\n}\n//\n\n\n//принимает данные статистики и выводит их \nconst Statistics = ({good,neutral,bad,total,positiveDomination}) =>{\n    return(\n    <div className={styles.Statistics}>\n            <span className={styles.stat}>Good: {good}</span>\n            <span className={styles.stat}>Neutral: {neutral}</span>\n            <span className={styles.stat}>Bad: {bad}</span>\n            <span className={styles.stat}>Total: {total}</span>\n            <span className={styles.stat}>\n            Positive feedback domination: {positiveDomination}%\n            </span>\n        </div>\n        )\n}\n//\n\n\n//классовый компонент секции. он тут всем заправляет\nclass Section extends React.Component{\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    //сумму и процент позитивных никуда не записываю, просто возвращаю из коллбек функций\n\n\n    //коллбеки. ничего особенного.\n    leaveGood = ()=>this.setState(state=>({good:state.good+1}));\n\n    leaveBad = () =>this.setState(state=>({bad: state.bad+1}));\n\n    leaveNeutral = ()=> this.setState(state=>({neutral: state.neutral+1}));\n    //\n\n    //сумма. юзается уже в рендере и в подсчете позитивщиков\n    countTotal = () => this.state.good+this.state.neutral+this.state.bad;\n    //\n\n    // подсчет людей, которые нажали не ту кнопку\n    howManyPositive =()=> Math.round(100/this.countTotal()*(this.state.good));\n    //\n\n\n    render(){\n        return(\n        <div className={styles.Section}>\n            <span className={styles.title}>{this.props.title}</span>\n\n        {/* не понимаю к чему в задании был onLeaveFeedback помимо options */}\n            <FeedbackOptions \n            options={{\n            leaveGood: this.leaveGood,\n            leaveNeutral: this.leaveNeutral,\n            leaveBad:this.leaveBad\n            }}/>\n\n\n            {/* проверка на статистику */}\n            {this.countTotal()>=1 \n            ? <Statistics \n            good={this.state.good}\n            neutral={this.state.neutral} \n            bad={this.state.bad} \n            total={this.countTotal()} \n            positiveDomination={this.howManyPositive()}/>\n            : <span className={styles.noFeedback}>No feedback given. U can be first</span>\n            }\n        </div>\n        )\n    }\n}\n\n\nexport default Section;"]},"metadata":{},"sourceType":"module"}